@page "/clientes/crear"
@inject IRepositorio repositorio
@inject SweetAlertService swal
@inject NavigationManager navigationManager

<h1 class="text-center m-4">Crear nuevo cliente</h1>

<div class="container">
    <FormularioCliente cliente="cliente" OnValidSubmit="CrearCliente"/>
</div>


@code {

    public Cliente cliente { get; set; } = new Cliente();

    private async Task CrearCliente()
    {
        var httpResponse = await repositorio.Post("api/cliente/crear", cliente);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            await swal.FireAsync("Ok", $"Cliente {cliente.CLIENTE_NOMBRES} {cliente.CLIENTE_APELLIDOS} creado", SweetAlertIcon.Success);
            navigationManager.NavigateTo("/");
        }
    }

}
