@page "/clientes/editar/{id:int}"
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
@inject SweetAlertService swal

<h1 class="text-center m-4">Editar cliente</h1>


<div class="container">
    <FormularioCliente cliente="cliente" OnValidSubmit="EditarCliente" />
</div>



@code {
    [Parameter]
    public int id { get; set; }

    Cliente cliente;

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<Cliente>($"api/cliente/editar/{id}");

        if (httpResponse.HttpResponseMessage!.IsSuccessStatusCode)
        {
            cliente = httpResponse.Response!;
        }
        else
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
    }

    public async Task EditarCliente()
    {
        var httpResponse = await repositorio.Put<Cliente>("api/cliente/editar", cliente);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            await swal.FireAsync("Ok", $"Cliente con id {id} modificado", SweetAlertIcon.Success);
            navigationManager.NavigateTo("/");
        }
    }
}
